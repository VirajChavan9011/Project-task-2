create or replace schema ss.consumption_zone;
use schema ss.consumption_zone;

--we need to create salesman and customer dimension table
--which followed by order fact table

--customer dimension table

create or replace table dim_customers(
cust_pk number autoincrement,
customer_id	number (38,0) ,
cust_name varchar(200),
city varchar(200),
grade number(38,0),	
salesman_id number(38,0),
added_timestamp timestamp default current_timestamp(),
update_timestamp timestamp default current_timestamp(),
active_flag varchar(1) default 'Y'
);


--salesman dimension table

create or replace table dim_salesman(
salesman_pk number autoincrement,
name varchar(200) ,
city varchar(200),
comission number(3,2),	
salesman_id number(38,0),
added_timestamp timestamp default current_timestamp(),
update_timestamp timestamp default current_timestamp(),
active_flag varchar(1) default 'Y'
);


--order fact table

create or replace table fact_orders(  
order_fact_key number autoincrement,
cust_pk number,
salesman_pk number,
ord_no	number (38,0) ,
purch_amt number (38,0)
);


show tables

--add data in tables

--customer -dimensional

INSERT INTO ss.consumption_zone.dim_customers(
    customer_id,
    cust_name,
    city,
    grade,
    salesman_id)
select
   (customer_id,
    cust_name,
    city,
    grade,
    salesman_id)
from ss.curated_zone.curated_customers;


--salesman -dim

INSERT INTO ss.consumption_zone.dim_salesman(
name,
city,
comission,
salesman)
select 
(name,
city,
comission,
salesman)
from ss.curated_zone.curated_salesman;

--orders -fact


INSERT INTO ss.consumption_zone.dim_orders(
cust_pk ,
salesman_pk ,
ord_no,
purch_amt)
select 
(cust_pk ,
salesman_pk ,
ord_no,
purch_amt)
from 
ss.curated_zone.curated_orders as co
join ss.consumption_zone.dim_customers as cc on co.customer_id=cc.customer_id
join ss.consumption_zone.dim_salesman as cs on cs.salesman_id=c0.salesman_id;

show tables;